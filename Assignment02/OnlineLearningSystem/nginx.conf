worker_processes 1;
events {
    worker_connections 1024;
}
http {
    # Define a rate limiting zone: 10MB shared memory, 5 requests per second per IP
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=5r/s;
    
    server {
        listen 80;
        
        # Health check endpoint
        location /healthz {
            return 200 'OK';
            add_header Content-Type text/plain;
        }
        
        # Swagger UI for User Service
        location /api/users/docs/ {
            proxy_pass http://user-service:5001/docs/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Static assets for Swagger UI
        location /api/users/swaggerui/ {
            proxy_pass http://user-service:5001/swaggerui/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # Rate limited API proxying for user-service
        location /api/users/ {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://user-service:5001/api/v1/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            rewrite ^/api/users/(.*)$ /$1 break;
        }
        
        # Rate limited API proxying for course-service
        location /api/courses/ {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://course-service:5002/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            rewrite ^/api/courses/(.*)$ /$1 break;
        }
        
        location /api/enrollments/ {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://enrollment-service:5003/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            rewrite ^/api/enrollments/(.*)$ /$1 break;
        }
        
        # Rate limited API proxying for certificate-service
        location /api/certificates/ {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://certificate_service:5004/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            rewrite ^/api/certificates/(.*)$ /$1 break;
        }
        
        # Rate limited API proxying for analytics-service
        location /api/analytics/ {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://analytics_service:5005/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            rewrite ^/api/analytics/(.*)$ /$1 break;
        }
        
        # Rate limited API proxying for feedback-service
        location /api/feedback/ {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://feedback_service:5006/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            rewrite ^/api/feedback/(.*)$ /$1 break;
        }
        
        # Default fallback
        location / {
            return 404 'Invalid Endpoint';
            add_header Content-Type text/plain;
        }
    }
}